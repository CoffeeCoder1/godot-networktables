name: build

on:
  push:
  pull_request:

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: 'ubuntu-latest'
            name: Linux x86_64
            flags: ''
          - os: 'ubuntu-24.04-arm'
            name: Linux arm64
            flags: ''
          - os: 'windows-latest'
            name: Windows x86_64
            flags: '-DUSE_SYSTEM_FMTLIB=ON -DUSE_SYSTEM_LIBUV=ON -DUSE_SYSTEM_EIGEN=OFF -DCMAKE_TOOLCHAIN_FILE="$Env:RUNNER_WORKSPACE/vcpkg/scripts/buildsystems/vcpkg.cmake" -DVCPKG_INSTALL_OPTIONS=--clean-after-build -DVCPKG_TARGET_TRIPLET=x64-windows-release -DVCPKG_HOST_TRIPLET=x64-windows-release'
          - os: 'macos-latest'
            name: macOS Universal
            flags: ''
    name: "Build - ${{ matrix.name }}"
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v4.1.7
        with:
          submodules: 'recursive'
      - name: setup ninja
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get install ninja-build
          elif [ "$RUNNER_OS" == "Windows" ]; then
            choco install ninja
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install ninja
          fi
        shell: bash
      - name: run vcpkg
        if: runner.os == 'Windows'
        uses: lukka/run-vcpkg@v11.5
        with:
          vcpkgDirectory: ${{ runner.workspace }}/vcpkg
          vcpkgGitCommitId: 37c3e63a1306562f7f59c4c3c8892ddd50fdf992 # HEAD on 2024-02-24
      - name: build
        run: ./ci/ci.bash ${{ matrix.flags }}
        shell: bash
      - name: upload-artifacts
        uses: actions/upload-artifact@v4.3.6
        with:
          name: godot-networktables-${{ matrix.os }}
          path: build/install

  package:
    needs: [build]
    name: "Package"
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4.1.7
      - name: download all build artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          path: build/artifacts
      - name: build
        run: sh ci/package.bash build/artifacts
        shell: bash
      - name: upload-artifacts
        uses: actions/upload-artifact@v4.3.6
        with:
          name: project
          path: project

  publish-release:
    needs: [package]
    name: "Publish - Release"
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4.1.7
        with:
          ref: master
      - name: download project artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          name: project
          path: godot-networktables
      - name: compress release
        run: |
          mkdir dist
          tar -czvf dist/godot-networktables-universal.tar.gz -C godot-networktables .
          zip -r dist/godot-networktables-universal.zip godot-networktables
      - name: create release
        uses: softprops/action-gh-release@v2.0.8
        with:
          files: dist/*
          fail_on_unmatched_files: true
